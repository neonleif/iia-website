---
import '../styles/global.css'

export interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Nicolaj Schweitz - Technical Tester & Test Automation Expert. Specialized in Agile Testing, API Testing, and UI Automation." />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="bg-gray-50 text-gray-900 antialiased">
		<header class="bg-white shadow-sm border-b">
			<nav class="max-w-6xl mx-auto px-4 py-4">
				<div class="flex items-center justify-between">
					<div class="flex items-center gap-3">
						<div class="w-10 h-10 bg-gradient-to-br from-gray-900 to-blue-900 rounded-lg flex items-center justify-center text-white font-bold text-sm">
							NS
						</div>
						<div>
							<h1 class="text-xl font-bold text-gray-900">Nicolaj Schweitz</h1>
							<p class="text-sm text-gray-600">Technical Tester</p>
						</div>
					</div>
					<ul class="hidden md:flex gap-8">
						<li><a href="/" class="text-gray-700 hover:text-blue-600 transition-colors font-medium">Home</a></li>
						<li><a href="/expertise" class="text-gray-700 hover:text-blue-600 transition-colors font-medium">Expertise</a></li>
						<li><a href="/contact" class="text-gray-700 hover:text-blue-600 transition-colors font-medium">Contact</a></li>
					</ul>
					<div class="md:hidden">
						<button id="mobile-menu-button" class="text-gray-700 hover:text-blue-600" aria-label="Toggle mobile menu">
							<svg id="menu-icon" class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
							</svg>
							<svg id="close-icon" class="w-6 h-6 hidden" fill="none" stroke="currentColor" viewBox="0 0 24 24">
								<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
							</svg>
						</button>
					</div>
				</div>
				<!-- Mobile Menu -->
				<div id="mobile-menu" class="hidden md:hidden mt-4 pb-4">
					<ul class="flex flex-col gap-4">
						<li><a href="/" class="block text-gray-700 hover:text-blue-600 transition-colors font-medium py-2 px-4 hover:bg-gray-50 rounded-lg">Home</a></li>
						<li><a href="/expertise" class="block text-gray-700 hover:text-blue-600 transition-colors font-medium py-2 px-4 hover:bg-gray-50 rounded-lg">Expertise</a></li>
						<li><a href="/contact" class="block text-gray-700 hover:text-blue-600 transition-colors font-medium py-2 px-4 hover:bg-gray-50 rounded-lg">Contact</a></li>
					</ul>
				</div>
			</nav>
		</header>

		<main class="min-h-screen">
			<slot />
		</main>

		<footer class="bg-gray-900 text-white mt-20">
			<div class="max-w-6xl mx-auto px-4 py-12">
				<div class="grid grid-cols-1 md:grid-cols-3 gap-8">
					<div>
						<div class="flex items-center gap-3 mb-4">
							<div class="w-8 h-8 bg-gradient-to-br from-gray-900 to-blue-900 rounded-lg flex items-center justify-center text-white font-bold text-xs">
								NS
							</div>
							<span class="font-bold">Nicolaj Schweitz</span>
						</div>
						<p class="text-gray-400">Technical Tester & Test Automation Expert</p>
					</div>
					<div>
						<h3 class="font-semibold mb-4">Services</h3>
						<ul class="space-y-2 text-gray-400">
							<li>Test Automation</li>
							<li>Technical Testing</li>
							<li>Agile Test Coaching</li>
							<li>API Testing</li>
						</ul>
					</div>
					<div>
						<h3 class="font-semibold mb-4">Contact</h3>
						<div class="space-y-2 text-gray-400">
							<p>nico@isitautomated.com</p>
							<p>+45 5377 3508</p>
							<p>Copenhagen, Denmark</p>
						</div>
					</div>
				</div>
				<div class="border-t border-gray-800 mt-8 pt-8 text-center text-gray-400">
					<p>&copy; 2025 Nicolaj Schweitz. All rights reserved.</p>
				</div>
			</div>
		</footer>

		<script>
			// Mobile menu toggle functionality
			const mobileMenuButton = document.getElementById('mobile-menu-button');
			const mobileMenu = document.getElementById('mobile-menu');
			const menuIcon = document.getElementById('menu-icon');
			const closeIcon = document.getElementById('close-icon');

			if (mobileMenuButton && mobileMenu && menuIcon && closeIcon) {
				// Toggle menu on button click
				mobileMenuButton.addEventListener('click', (event) => {
					event.stopPropagation(); // Prevent event from bubbling to document
					const isHidden = mobileMenu.classList.contains('hidden');
					
					if (isHidden) {
						mobileMenu.classList.remove('hidden');
						menuIcon.classList.add('hidden');
						closeIcon.classList.remove('hidden');
					} else {
						mobileMenu.classList.add('hidden');
						menuIcon.classList.remove('hidden');
						closeIcon.classList.add('hidden');
					}
				});

				// Close mobile menu when clicking outside (only added once)
				document.addEventListener('click', (event) => {
					const target = event.target as Node;
					const isClickInside = mobileMenuButton.contains(target) || 
										  mobileMenu.contains(target);
					
					if (!isClickInside && !mobileMenu.classList.contains('hidden')) {
						mobileMenu.classList.add('hidden');
						menuIcon.classList.remove('hidden');
						closeIcon.classList.add('hidden');
					}
				});

				// Close mobile menu when clicking a link (for same-page navigation)
				const mobileMenuLinks = mobileMenu.querySelectorAll('a');
				mobileMenuLinks.forEach(link => {
					link.addEventListener('click', () => {
						mobileMenu.classList.add('hidden');
						menuIcon.classList.remove('hidden');
						closeIcon.classList.add('hidden');
					});
				});
			}
		</script>
	</body>
</html>